// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  angular.module('piScanner', []).controller('mainCtrl', function($scope, $http) {
    $scope.query = {
      sequence: '',
      range_start: '',
      range_end: ''
    };
    $scope.response = {
      scan: null,
      scan_error: '',
      range: null,
      range_error: ''
    };
    $scope.scan = function() {
      var req;
      $scope.response.scan = null;
      $scope.response.scan_error = '';
      req = $http.get("/find/" + ($scope.query.sequence.replace(/\s/g, '')));
      req.then(function(data, status, headers, config) {
        return $scope.response.scan = data.data;
      });
      return req.error(function(data, status, headers, config) {
        switch (status) {
          case 400:
            return $scope.response.scan_error = 'I can\'t scan for that! Digits only please.';
          default:
            return $scope.response.scan_error = 'Uh oh, something went wrong, might have been an issue with the server, like it might be trying to deal with too many requests right now.';
        }
      });
    };
    return $scope.range = function() {
      var req;
      $scope.response.range = null;
      $scope.response.range_error = null;
      req = $http.get("/range/" + $scope.query.range_start + ":" + $scope.query.range_end);
      req.then(function(data, status, headers, config) {
        $scope.response.range = data.data;
        $scope.response.range.start = $scope.response.range.query[0];
        return $scope.response.range.end = $scope.response.range.query[1];
      });
      return req.error(function(data, status, headers, config) {
        switch (status) {
          case 422:
            return $scope.response.range_error = 'Invalid range: the end position needs to be after the start position, and they both need to be position';
          case 403:
            return $scope.response.range_error = 'Sorry, you can only request up to 100000 digits at a time';
          default:
            return $scope.response.range_error = 'Uh oh, something went wrong, might have been an issue with the server';
        }
      });
    };
  });

}).call(this);
